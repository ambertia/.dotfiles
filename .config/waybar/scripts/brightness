#!/usr/bin/env bash

# Amber's Dotfiles
#  __      __                     __                        
# /\ \  __/\ \                   /\ \                       
# \ \ \/\ \ \ \     __     __  __\ \ \____     __     _ __  
#  \ \ \ \ \ \ \  /'__`\  /\ \/\ \\ \ '__`\  /'__`\  /\`'__\
#   \ \ \_/ \_\ \/\ \L\.\_\ \ \_\ \\ \ \L\ \/\ \L\.\_\ \ \/ 
#    \ `\___x___/\ \__/.\_\\/`____ \\ \_,__/\ \__/.\_\\ \_\ 
#     '\/__//__/  \/__/\/_/ `/___/> \\/___/  \/__/\/_/ \/_/ 
#                              /\___/                       
#                              \/__/                        

#---------------------------------------------------------------------
# Waybar Scripts - Brightness Control
# Modified from HyprV
#
# Modified to enable setting a specific % increment and doing additional arithmetic to ensure
# this value is respected / compensate for rounding errors.
#
# I also disabled calls to get_icon() and notify_user() in preference of using a Waybar widget
# to monitor brightness as a percentage.
#---------------------------------------------------------------------

# Backlight increment in percentage
INCREMENT=5

# Get brightness
get_backlight() {
	LIGHT=$(printf "%.0f\n" $(brightnessctl i))
	echo "${LIGHT}%"
}

# Get the numeric brightness (0 - 65535) from an integer percentage, with primitive rounding
get_numeric() {
	local intermediate=$(( $1 * 65535 ))
	local base_value=$(( $intermediate / 100 ))
	echo $(( $base_value + (($intermediate % 100 ) / 50) ))
}

# Get the integer percentage brightness (0 - 100) from a numeric brightness, with primitive rounding
get_percentage() {
	local intermediate=$(( $1 * 100 ))
	local base_value=$(( $intermediate / 65535 ))
	echo $(( $base_value + (($intermediate % 65535 ) / 32768) ))
}

# Increase brightness
inc_backlight() {
	local current=$(brightnessctl g)
	local toPct=$(get_percentage $current)
	local toNum=$(get_numeric $(( $toPct + $INCREMENT )))
	if [[ "$toNum" -gt "65535" ]]; then
		toNum=65535
	fi
	brightnessctl set $toNum # && get_icon && notify_user
}

# Decrease brightness
dec_backlight() {
	local current=$(brightnessctl g)
	local toPct=$(get_percentage $current)
	local toNum=$(get_numeric $(( $toPct - $INCREMENT )))
	if [[ "$toNum" -lt "0" ]]; then
		toNum=0
	fi
	brightnessctl set $toNum # && get_icon && notify_user
}

# Execute accordingly
if [[ "$1" == "--get" ]]; then
	brightnessctl g
elif [[ "$1" == "--inc" ]]; then
	inc_backlight
elif [[ "$1" == "--dec" ]]; then
	dec_backlight
# Flags for testing get_percentage and get_numeric functions provided an input value
elif [[ "$1" == "--pct" ]]; then
	get_percentage $2
elif [[ "$1" == "--num" ]]; then
	get_numeric $2
else
	get_backlight
fi
